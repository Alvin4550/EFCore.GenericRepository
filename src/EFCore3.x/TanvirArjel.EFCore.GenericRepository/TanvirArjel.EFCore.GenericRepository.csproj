<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <AssemblyName>TanvirArjel.EFCore.GenericRepository</AssemblyName>
    <RootNamespace>TanvirArjel.EFCore.GenericRepository</RootNamespace>
    <Description>This library is an almost perfect Generic Repository implementation for EF Core ORM which will remove developers' pain to write repository layer for each .NET Core and .NET project.

This library includes the following notable features:

1. This library can be run on any .NET Core or .NET application which has .NET Standard 2.0 and .NET Standard 2.1 support.

2. It’s providing the Generic Repository through Unit of Work pattern.

3. It has all the required methods to query your data in whatever way you want without getting IQueryable&lt;T&gt; from the repository.

4. It also has Specification&lt;T&gt; pattern support so that you can build your query dynamically i.e. differed query building.

5. It also has database level projection support for your query.

6. It also has support to run raw SQL command against your relational database.

7. It also has support to choose whether you would like to track your query entity/entities or not.

8. It also has support to reset your EF Core DbContext state whenever you really needed.

9.  Most importantly, it has full Unit Testing support.</Description>
    <Title>EF Core Generic Repository</Title>
    <Copyright>©2020 TanvirArjel. All rights reserved.</Copyright>
    <PackageProjectUrl>https://github.com/TanvirArjel/EFCore.GenericRepository</PackageProjectUrl>
    <RepositoryUrl>https://github.com/TanvirArjel/EFCore.GenericRepository</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>EFCore, RepositoryLayer, GenericRepository, UnitOfWork, .NET, .NETCore, ASP.NETCore</PackageTags>
    <PackageReleaseNotes>The release contains the following bug fixes:

1. Entity projection to value type was not working due to the reference type constraint. It has been fixed.
2. XML comments were not showing on IntelliSense. It has been fixed.</PackageReleaseNotes>
    <Version>3.1.1</Version>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageIcon>icon.png</PackageIcon>
    <Authors>TanvirArjel</Authors>
    <NeutralLanguage>en-US</NeutralLanguage>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="stylecop.json" />
    <None Include="..\..\..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="images\icon.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
   
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="stylecop.json" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.9.8">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="3.1.0" />
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="System.Linq.Dynamic.Core" Version="1.0.19" />
  </ItemGroup>

</Project>
